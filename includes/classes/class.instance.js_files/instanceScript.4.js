		//	// Alchemist's Fray	//		var log = require( "../class.log" ),			realmConfig = require( "../../config.realm" );		exports.script = function( instanceObject )	{		// start the periodic resurrection		//instanceObject.startPeriodicResurrection();		instanceObject.resetFactionsPoints( [ 'anterium', 'hegemony' ] );		instanceObject.setMaxFactionPoints( 3 );				// new character is added		instanceObject.events._add( "addCharacter", function( args )		{			var addedCharacterObject = args.characterObject;						if( addedCharacterObject.properties.character_type != 3 )			{				// character is not a player								return;			}						// send points update			instanceObject.sendFactionPointsUpdateToPlayer( addedCharacterObject );						var disconnectEvent = addedCharacterObject.events._add( "disconnect", function( disconnectArgs )			{				// send the resurrection cooldown to this character								//addedCharacterObject.events._remove( dieEvent );				addedCharacterObject.events._remove( disconnectEvent );			});		});				// character has reconnected		instanceObject.events._add( "reconnectCharacter", function( args )		{			var addedCharacterObject = args.characterObject;						if( addedCharacterObject.properties.character_type != 3 )			{				// character is not a player								return;			}						// send points update			instanceObject.sendFactionPointsUpdateToPlayer( addedCharacterObject );		});				// the battleground target points have been reached		instanceObject.events._add( "maxPointsReached", function( args )		{			var _charactersToProcess = 0;						var _endActions = function()			{				// instance may close now				instanceObject.startAutoShutdown( realmConfig.realmInstanceCloseOnBattlegroundFinishInterval );								// send the stats				instanceObject.sendBattlegroundStatisticsToAllPlayers();			}						for(var i in instanceObject.characters)			{				var _c = instanceObject.characters[ i ];								if( _c.properties.character_type != 3 )				{					// character is not a player										continue;				}								_charactersToProcess++;								if( _c.properties.character_faction == args.byFactionName )				{					// character is in winning faction										_c.modGlory(									_c.getStandardGloryRewardAmount() * 3,									function()									{										_c.modPolen(														_c.getStandardPolenRewardAmount() * 10,														function()														{															_charactersToProcess--;																														if( _charactersToProcess > 0 )															{																return;															}																														_endActions();														}													);									}								);				}				else				{					// character is in losing faction										_c.modGlory(									_c.getStandardGloryRewardAmount(),									function()									{										_c.modPolen(														_c.getStandardPolenRewardAmount() * 3,														function()														{															_charactersToProcess--;																														if( _charactersToProcess > 0 )															{																return;															}																														_endActions();														}													);									}								);				}			}		});	}																														